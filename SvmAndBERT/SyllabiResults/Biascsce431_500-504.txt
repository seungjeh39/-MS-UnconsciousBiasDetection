 course number: csce 431 course title: software engineering section: sections 500 -504 time: tr 8 -9:15 a.m
location: zach 350 credit hours: 3 sections with corresponding lab schedules section lab days/times location 500 f 8:20 -10 a.m
zach 582 501 f 10:20 a.m
– 12 pm zach 582 502 f 12:40 -2:20 p.m
zach 582 503 f 3-4:40 p.m
zach 582 instructor details instructor: pauline wade office: virtual (zoom) to be posted in canvas e-mail: paulinewade@tamu.ed
office hours: tues 9:30 -10:30 a.m
office hours: tues 3:00 -4:00 p.m
course prerequisites csce 315 special course designation none course learning outcomes ● evaluate customer’s requirements and use this as a basis for the design, implementation, and validation of a computing- based solution, with success measured by attaining at least a satisfactory customer feedback score 
● experience the entire project lifecycle from conception, implementation, deployment, and support and have the ability to describe this process with specific supporting examples
● when asked about the software engineering process during an interview, provide a specific response with supporting information gained from this class, increasing the probability of progressing through the employment screening process
● determi ne the most effective communication techniques to function effectively as a team, with people you haven’t worked with before who have different backgrounds/personalities
success is measured by at least a satisfactory peer feedback 
csce 431 – software engineering course syllabus page 4 of 15 ● formulate a risk mitigation, monitoring, and management plan to reduce the negative impact of risks and difficulties that exist in software projects, to increase the likelihood of success of the group projects with success measured by attaining at least a satisfactory customer feedback score 
● increase the probability of progressing through the employment screening process by being able to describe and support with specific examples, the software development lifecycle and software engineering processes, m ethods, and tools that directly contribute to high quality software
● gain experience in answering impromptu questions , through the ability of formulating and communicating a credible answer with specific supporting examples
therefore, a reasonable course load (including project work) will consume on average 6 -9 hours outside of class
textbook and/or resource materials pressman, roger
mcgraw -hill higher education (us), 2019
a) before you get started, be sure your popup blocker is turned off and that your cookies ar e enabled
e) the opt out option is al so displayed on the same page
f) if you have already accessed your etextbook in canvas and want to know how access it offline, or after the semester has ended, click here 
grading policy the final grade you will receive in the class will be based on points accumulated during the semester
thus, both continued progress (the process) and the quality of your product (and other deliverables) will determine your grade
although a substantial part of your grade is based on the team’s performance in the group project, individual performance is crucial
csce 431 – software engineering course syllabus page 5 of 15 the grading scale is: a ≥ 9 0% > b ≥ 80% > c ≥ 70% > d ≥ 60% > f the breakdown of the total percentage points in the class is shown in the table below: ○ project – group grade with points specified in the rubric sprint 1 – 2% sprint 2 – 6% sprint 3 – 10% project tur nover – 12% 30% ○ project – individual grade individual audit – 20% final average peer feedback – 4% submission of peer feedback of teammates – 6% 30% ○ quizzes - in class – no midterm or final exam
15% ○ assignments (lab or lecture) / reflection 12% ○ peer review of your classmate’s work 3% ○ attendance – lecture – over 5 random sessions see “ graded attendance” section below 5% ○ attendance – lab – over 5 random sessions see “ graded attendance” section below 5% extra credit**: opportunities to be announced when needed, to reinforce mastery of concepts, i may add additional requirements / assignments, which will count as extra credit
there is no obligation for you to do these extra credit requirements, rather these should be viewed as opportunities to boost your grade
see “attendance” section for eligibility to get extra credit depending on the complexity or time involved, 1 -3 % point(s) added to the final grade
for example, producing an educational vide o for the benefit of other students can be worth 3% points
• although the project related grades make up a significant portion of the grade, individual grades will significantly help you be successful
while some items in the table above may be worth less, they are crucial to your later success in the higher weighted items and your overall grade
is a b
we do not curve in this class
rather, we teach to mastery which means that we have clear expectations in terms of what you should complete and what knowledge you should have obtained by the end of the course to succeed and to earn an a
if you are participating appropriately, trying to adjust based on our feedback, and working equitably with your team, you should expect an a
the instructors will play the role of managers, auditors, and mentors
the team’s main output is a saas (software as a service) application, which will eventually be deployed to the cloud
nosql system such as mongo, or a relational dbms such as postgresql)
to ensure inclusiveness and avoid students feeling excluded , you will be assigned to a project group based on your lab section and results of a skill survey to make sure that students with prior experience in particular technologies are distributed evenly across the different project groups
any additional ite ms that may be added to the rubric will all count as extra credit, hence there is no obligation for the team to comply with the requirement, as you can still get excellent grades with the basic requirements
o software installed and delivered to the customer o final code (that is clean and understandable), submitted in the assigned github classroom repository (at the end of the semester), and any other supporting documentation (e.g.
note that it will be difficult to get an a in the class if you do not have a tested working system that meets the customer’s expectations (a s indicated by a customer feedback score of at least “meets expectations”) by the end of the semester
o artifacts related to your project management system e.g.
jira reports and specified in the rubric, uploade d in the ms teams drive: ● the team will present incremental progress of the project during a project audit in each sprint with the instructors and teaching team (to be scheduled or impromptu)
students who are absent ( see section “graded absence” below), will receive a 30% deduction from the group sprint grade, unless the absence / lateness is considered excused
• condition of getting the team grade is submission of all peer feedback and comple tion of all project deliverables on the date specified in the canvas class calendar
• your project grade can increase based on (but not limited to) the following: o excellent project deliverables which exceed basic expectations
• your project grade can decrease based on (but not limited to) the following: • poor customer feedback / deployment of an application with many high severity defects (no workaround) o my perception of your effort
this can be due to poor peer feedback from your peers (after i have the chance to investigate that the feedback is accurate) [or] otherwise at my discretion o continuously missing your group’s meetings
o inappropriate (e.g.
rude, not professional) communication with the instructor/teaching team 
individual project grade • this represents your individual mastery during one individual project audit conducted sometime after the midterm, which will test your knowledge of how the software engineering process, methods, and tools are csce 431 – software engineering course syllabus page 8 of 15 used in project execution
you should also have appropriate unit testing throughout your code
• extra credit is given for those who assume the product owner and scrum master role, if the team grade is >=80%, customer feedback score and peer feedback score that are at least meets expectations
note: credit will be given upon submission of peer feedback
• condition of getting the individual project grade is submission of all peer feedback on a timely basis
exams/quizzes lets us know where your knowledge might be lacking so that we may be able to make class adjustments and also informs you about the knowledge that you need to have
any unauthorized sharing constitutes academic misconduct and will be reported to the honors council and result in the application of an appro priate sanction
any violation of academic integrity constitutes academic misconduct and will be reported to the honors council and result in the application of an appropriate sanction
• homework must be submitted electronically using canvas, and will be due midnight of the due date, unless otherwise noted
it is best to double check your submission by downloading it yourself, then confirming that the one stored in canvas is the int ended one
failure to confirm correct submission is not a valid excuse for incomplete / late assignments for late submissions, please refer to the section on late work policy
csce 431 – software engineering course syllabus page 9 of 15 graded attendance • attendance will be determined through one or more of th e following: quizzes , attendance logs , participation, class work submission, during 5 random days in the semester, for both lab and lecture
• absence and tardiness: failure to attend a class or late arrival ( by definition > 10 minutes late ) or leaving class early (> 10 minutes before class ends ) without prior approval, may be counted as an absence and will impact your grade
student rule 7 )
note: even if late, you should still come to class to get credit for the class participation / quiz
• due to the unfortuna te consequences and undue burden your frequent absences would have on the rest of the team, more than 5 unexcused absences from either lecture or lab are an automatic forfeit of the team grade 
• excuses not valid: oversleeping, cramming, etc.
are not valid reasons
ultimately, the instructor reserves the right to determine what constitutes a “valid reason” on a case -by-case basis
• minimum requirement for extra credit: to be eligible for extra credit points, your attendance must be 4 out of the 5 from lab and/or lecture (i.e.
in the attendance category, your % points should be >= 4%, out of 5%)
• there will be no makeup for attendance, unless the absence meets student rule 7
extra credit when needed to reinforce mastery of concepts, extra credit assi gnments may be assigned, which will *all* count as extra credit
there is no obligation for you to do these assignments, rather these should be viewed as opportunities to boost your grade
depending on the complexity or time involved, extra credit may be worth between 1 -3 % point(s) added to the final grade
to be eligible for extra credit points, you need to meet the minimum attendance requirement which is described in the attendance section
late work policy with pre -approval from the instructor, late submissions (e.g.
submitting a deliverable after the established deadline ) is accepted only up to the time that the solutions will be discussed in class or as agreed to with the instructor depending on the specific circumstance
late work policies must clearly link to student rule 7 
the request for dead line extensions should be submitted at least three business days before the due date, by sending a request via a link to be given to you by the instructor, especially for those absences that meet student rule 7
technology -related / technological problems nor failure to confirm correct submission are not an excuse for incomplete or late assignments
no “unapproved’ late assignments will be accepted without pr ior approval, and will receive a grade of 0
no late work will be accepted after the last day of class, irrespective of the deadline for an assignment
labs will be conducted weekly unless otherwise announced
csce 431 – software engineering course syllabus page 11 of 15 week # topics / activities due 1 • overview of the course • software engineering and process models • intro to ruby/rails & mvc • getting to know you survey • lab assignment 2 • overview of the project and agile process , including quality objectives that will increase probability of project success • requirements • testing
• pre-sprint begins • submit customer info • contact client • sprint planning & creating sprint backlog • identify product owner / scrum master • lab assignment 3 • analysis & design • project management topic: estimation, use of metrics, monitoring and control • sprint 1 begins • data design • project scope • sprint backlog with user stories • book collection assignment – part 1 4 • continuous integration/ continuous delivery (ci/cd) • security • user stories in jira • risk plan 5 • sprint 1 end • project audits • sprint 2 begins • sprint 1 deliverables • sprint 1 review • sprint 1 retrospective • sprint 1 peer feedback • sprint 2 create sprint backlog & sprint planning • peer review – book collection 6 • analysis & design • maintainability using linters (e.g.
rubocop) • sprint 2 user stories • data design revisions • book collection assignment – part 2 7 • user experience design • accessibility 8 • sprint 2 ends • sprint 3 begins • project audits for sprint 2 • sprint 2 deliverables • sprint 2 review • sprint 2 retrospective • sprint 2 peer feedback 9 spring break 10 • sprint 3 begin • user acceptance test • deployment • configuration management • create sprint backlog & sprint planning 11 • maintenance • project close • individual audits begin • sprint 3: user stories in jira • data design revisions csce 431 – software engineering course syllabus page 12 of 15 12 • project work • individual audits continue • user acceptance test form 13 • sprint 3 end • project audits for sprint 3 • customer acceptance test begin
• reflections on project presentations • customer feedback form and/or user acceptance test results (if any) 15 • project presentations • maintenance phase ends for those applications with quality issues
course copyright the materials used within this course are copyrighted and include, but are not limited to, the syllabi, quizzes, exams, homework, online handouts, course videos, audio and visual recordings of classes, etc
technology support for this course, you will be required to have access to the internet and canvas to participate
if you need help with technology, please use the online help materials http://it.tamu.ed
or phone: (979) 845 -8300, 24 hours a da y, 7 days a week
technology -related / technological problems are not an excuse for incomplete or late assignments
if your camera is not operational in your laptop, you will need to acquire an external videocam
if you do not have internet access at ho me, please contact the internet provider in your area as most are giving free internet to college students during this time
