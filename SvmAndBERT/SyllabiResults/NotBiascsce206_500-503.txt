 for detailed information course description : this course addresses principles of computer science including algorithm development, programming techniques, language features, and methods of documentation
required text : a
pohl, c by dissection, 4th ed.
pearson, 2001
attendance at lectures/labs will constitute 5% of your final grade
scholastic dishonesty : scholastic dishonesty will not be tolerated in any form
one midterm and one comprehensive final will be given during the semester
note that exams are extremely important
assignments : programming assignment grades will cumulatively represent 30% of your final grade
programming assignment grades will lose 25% for each day after the due date
assignments will require use of standard programming style conventions and documentation which will be illustrated in lab and lecture examples
lecture topics 1
ansi c programs, lexical elements and operators k&p ch 1, 2 2
flow of control and functions k&p ch 3, 4 3
character processing, and fundamental data types k&p ch 5, 6 4
file i/o and review k&p ch 13 5
describe the use of c variables, expressions and data assignments
describe the creation and use of pre-processor commands (#define, #include)
describe the use of the while statement
chap 2: describe the characters and lexical elements of the c language
describe operator precedence and associativity and their impact
demonstrate the appropriate use of chapter topics via student written code
chap 3: name and describe the use of relational, equality and logical operators
demonstrate the appropriate use of chapter topics via student written code
describe the need for and use of the return statement
describe the need for and the use of function prototypes
describe effective approaches to efficient design of programming projects
describe function invocation and data transmission via call-by-value
chap 5: describe the need for and the use of the data type char
name the char header file containing useful char macros
chap 6: name the c fundamental data types
name the floating data types and data valid for such types
name the c math functions referenced and how access is achieved
describe the syntax and use for c casts and type conversions
chap 8: describe the declaration and use of pointer variables
describe the need for pointer variables to implement call-by-reference
name the storage classes studied and their impact on variable scope and extent
chap 9
describe the relationship between arrays and pointers in c
describe pointer arithmetic and its use with array element access
describe the syntax and need for passing arrays to a function
describe the need for and the declaration of multi-dimension arrays
describe the needed syntax and the benefit of dynamic memory allocation
10 describe the need for and the declaration of string data
describe the process of accessing string data through pointers
name and describe the use for string handling functions available in the standard library
demonstrate the appropriate use of chapter topics via student written code
11 describe the concept of recursion and how it is implanted in c
describe the syntax needed to access a structure member
describe the declaration of and need for an array of structures
chap 13 describe the need for and the creation of files for data input and output
describe the syntax necessary to gain access to an existing file or create a new one
describe the use of and syntax required for the fprintf() and fscanf() functions
