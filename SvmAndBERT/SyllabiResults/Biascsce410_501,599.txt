 course syllabus page 1 of 7 course information course number: csce410/611 course title: operating systems sections: 410-501, 410-599, 611-600 time: tuesday / thursday 11:10 am – 12:25 pm location: zachary 244 credit hours: 3 instructor details instructor: hamilton office: peterson 223 phone: 979-845-2758 e-mail: hamilton@tamu.ed
office hours: by appointment contact jennifer cutler at jenniferjoe@tamu.ed
course prerequisites prerequisites for this course are a course in computer organization or computer architecture (csce 312 or ecen 350) and a course on computer systems (csce 313), or equivalent
in particular, the course assumes (a) some understanding with interrupts from a hardware perspective, (b) some familiarity with low-level programming with some instruction set and (c) some understanding of the theory and practice of multithreaded programming and synchronization
graduate student should expect to be assigned some amount of additional work
• describe the role and operation of exception and interrupt handling
• practical exercise on operating system hardening using the texas cyber range • practical exercise on operating system administration using the texas cyber range textbook and/or resource materials • operating system concepts 9th or 10th edition, by silberschatz, galvin, gagne, john wiley & sons, inc.
• operating systems: three easy pieces by remzi and andrea arpaci-dusseau
also, canvas submissions may look completed when they actually are not
it is best to download the submission and to confirm that the submission stored on canvas is the intended one
under no circumstances will the instructor team consider material that has not been part of the original submission
if a student wants to add to or correct submitted files because they noticed that the original submission was wrong or incomplete, they can do this, but this will be considered as a new submission, and any late penalty will apply
the instructor and the ta's will not consider non-submitted material, and they will not consider the file timestamps (as opposed to submission timestamps) as indication of completion of the assignment
course syllabus page 3 of 7 late work policy a full letter grade cut will be imposed for every 24 hours (excluding weekends but including holidays) that an assignment is late
up to 24 hours late 1 letter grade reduction 24 - 48 hours late 2 letter grade reduction 48 - 72 hours late 3 letter grade reduction 72 - 96 hours late 4 letter grade reduction 96 – 120 hours late f grade with some points more than 120 hours late f grade with 0 points work submitted by a student as makeup work for an excused absence is not considered late work and is exempted from the late work policy
(reference student rule 7) honor and documentation of submitted work documentation of project assistance: assistance for all help, with the exception of syntax error resolution, must be acknowledged and placed at each specific location in the source code or documentation where assistance was received
note that “assistance” is restricted to “advice,” not “keying in the corrections for someone else.
no student may make changes of any kind (keyboard, mouse action, etc) to another student’s program
the use of the textbook’s solution manual in any form, bound, copied or electronic is forbidden
is also forbidden
student honor and academic integrity issues the policies of the student honor code concerning electronic copying of individual work apply to the programming assignments in this class
in general, a student must personally enter (via the keyboard) all work submitted under his/her own name
software reuse, as described below, is permitted and will not be considered a violation of the "electronic copying" prohibition
any output files submitted as part of a programming project must have been generated by that program
editing of output files or submission of "output files" created by an editor, rather than being generated by the program, is clearly contrary to expectations and may very likely constitute an attempt to deceive, i.e
cheating
this type of "electronic copying" is acceptable; you simply need to document the source for the reusable software component and the method in which it was obtained
you will not be penalized for reusing this type of “library” source code
note, however, that other student accounts are not "free software repositories," and reusing code from another student is strictly prohibited
also note that, while you may find useful small pieces of a program in a free software repository, you should expect to develop the majority of the code used in these projects yourself
