course syllabus page 1 of 9 course information course number: csce 410 course title: operating systems section : 500 time: mwf 10:20 am – 11:10 pm location: zach 350 credit hours: 3 instructor details instructor: chia-che tsai office: petr 228 e-mail: chiache@tamu.edu office hours : monday 11:3 0 am - 12:30 pm (petr 214) thursday 1:00 pm – 2:00 pm (zoom id: 97398779249 passcod e: 627171) course description the objective of this course is to make you familiar with the general architectu re and the most critical components of operating systems. you will leverage your knowledge acquired in your previous courses on computer architecture and computer systems to understand and implement aspects of operating systems, such as system cal ls, processes, memory management, scheduling, threading, synchronization, file systems, and i /o devices . we will cover general aspects, realization approaches, and case studies. in addition, we wi ll implement extensions to the open -source linux kernels and operating system libraries in the user space. course prerequisites csce 313 (and its corequisites csce312/ecen350), csce 315. in particular, the course assumes some familiarity with low -level programming, some understanding of interrupts from a hardware perspective, and some practice with multithreaded programming and synchronization. special course designation this course has no special designation. course learning outcomes upon completion of the course, students should be able to: • describe the role, the architecture, and the major components of an operating system. • describe the role and operation s of kerne ls, system calls, exception s and interrupt handling. course syllabus page 2 of 9 • implement a virtual memory manager for a paged system. • describe and compare various forms of concurrency mechanisms. • describe and compare various synchronization mechanisms, both for single -processor and multiprocesso r systems. • implement a threading system . • implement a simple file system in the user space . textbook and/or resource materials text book: operating systems: three easy pieces by remzi and andrea arpaci -dusseau. this bo ok is available for free at: https://pages.cs.wisc.edu/~remzi/ostep/ grading policy this course will adopt the following grading scale: a = 90 -100 b = 80 -89 c = 70 -79 d = 60 -69 f = <60 the grading will be based on textbook discussion, midterm and final exams , and projects . the weights of the activities and the correspondent policies are as follows: activity % policies midterm exams 35 three midterm exams will be taken through the duration of the course . the exams will be based on the opera ting system concepts discussed in class. all the exams will be in-person , close d-book exams . the materials covered in each exam will not be accumulative; the same topics will not be covered in two exams. students are allowed to bring a doub le-sided a4 -size note to the exams. the hi ghest score of the three exams will be worth 15% of the semester grade. the scores of the other two exams will each be worth 10% of the semeste r grade. projects 60 six project s will be finished through the duration of the course. no team submission is allowed; s tudents must submit their projects individually . the three highest scores of the projects will each be accounted for 1 2% of the semester grade. the scores of the other three projects will each be accounted for 8% of the semester grade. course syllabus page 3 of 9 collaborative note taking 5 students can share lecture not es to gain extra p oints for the semester. each student must submit a n independently taken note for one course lecture to gain 0.5% of the semester gr ade. the ma ximum points e ach student can gain from sharing notes is 5% . each note sub mitted must be complete and well-organized. notes of poor quality will be returned by the instructor. to be counted tow ard semester grade, the note must be shared through the google drive within one week (7 days) from the lecture given , before 11:59 pm. late work policy each student is allowed with at most 3 free late days throughout the whole semester , without any late submission penal ty. students can use the free late days on any project and m ust specify the free late days used when submitting a project. without any free late days, a student will receive 20% pe nalty for each extra late day used on a project. for example, if a s tudent has submitted a project three days after its deadline , and the student has spe cified to use exactly one free late day , the student will receive 40% penalty on the score of the project. no late da y is allowed for collaborative note taking. all notes must be submitted within 7 days after the lecture s (before 11 :59 pm). course schedule date topi c week 1: introductio n 8/24 topic: introduction to operating system s required reading: ostep - 2. introductio n 8/26 topic: let’s hack - building your own linux kerne l releasing “project 1: building your own linux kernel ” week 2: system call s 8/29 topic: kerne l required reading: ostep - 6. direction executio n 8/31 topic: system call s required reading: ostep - 6. direction executio n course syllabus page 4 of 9 9/2 topic: let’s hack - linux system call s releasing “project 2: system calls ” 9/5 labor day (no class ) week 3: processes & address space s 9/7 topic: processe s required reading: ostep - 4. processe s 9/9 topic: address space s required reading: ostep - 13. address spac es “project 1: building your own linux kernel” due before 11:59p m week 4: address translatio n 9/12 topic: address translatio n required reading: ostep - 14. address transl ation 9/14 topic: page table s required reading: ostep - 18. introduction to pagin g 9/16 topic: x86 page tabl e required reading: ostep - 20. advanced page tabl e week 5 & 6: memory managemen t 9/19 topic: free memory managemen t required reading: ostep - 17. free space managemen t 9/21 topic: demand paging & swappin g required reading: ostep - 21. swapping mechanis m 9/23 topic: let’s hack - linux page managemen t required reading: ostep - 23. complete vm system s releasing “project 3: paging in linux kernel ” 9/26 topic: page replacement polic y required reading: ostep - 22. swapping policie s “project 2: linux system calls” due before 11:59p m 9/28 topic: translation lookahead buffer s required reading: ostep - 19. translation lookahead buffer s 9/30 midterm i course syllabus page 5 of 9 week 7: cpu schedulin g 10/3 topic: cpu schedulin g required reading: ostep - 7. cpu schedulin g 10/5 topic: multi -level schedulin g required reading: ostep - 8. multi -level feedbac k 10/7 topic: fair schedulin g required reading: ostep - 9. lottery schedulin g week 8: threading 10/1 0 fall break (no class ) 10/1 2 topic: threadin g required reading: ostep - 26. concurrency & threa d 10/1 4 topic: let’s hack - thread schedulin g optional reading: ostep - 27. thread ap i releasing “project 4: user -level thread scheduling ” week 9 & 10: lock s 10/1 7 topic: locks & atomicit y required reading: ostep - 28. lock s 10/1 9 topic: locks & atomicit y required reading: ostep - 28. lock s 10/21 topic: locked data structur e required reading: ostep - 29. locked data structur e 10/2 4 topic: race condition s required reading: ostep - 32. concurrency bug s 10/2 6 topic: deadloc k required reading: ostep - 32. concurrency bug s 10/2 8 topic: let’s hack - user -level deadlock detectio n releasing “project 5: user -level deadlock detection ” “project 4: user -level thread scheduling” due before 11:59p m week 11: synchronizatio n course syllabus page 6 of 9 10/3 1 topic: conditional variab les required reading: ostep - 30. conditional variable s 11/2 topic: semaphore s required reading: ostep - 31. semaphore s 11/4 midterm i i week 12: virtual file system (vfs ) 11/7 topic: file i/ o required reading: ostep - 39. files and directories 11/9 topic: directorie s required reading: ostep - 39. files and directorie s 11/1 1 topic: let’s hack - linux virtual file syste m week 13 & 14: filesystem s 11/1 4 topic: file block s required reading: ostep - 40. fil esystem implementatio n 11/1 6 topic: inode s required reading: ostep - 40. filesystem implementatio n 11/1 8 topic: let’ s hack - user -level file syste m releasing “project 6: user -level file system ” “project 5: user -level deadlock detection” due before 11:59p m 11/2 1 topic: journalin g required reading: ostep - 42. fsck and journalin g 11/2 3 reading day (no class ) 11/2 5 thanksgiving holiday (no class ) week 15 & 16: device i/ o 11/2 8 topic: device i/ o required reading: ostep - 36. i/o device s 11/3 0 topic: device drive r required reading: ostep - 36. i/o device s course syllabus page 7 of 9 12/2 topic: hard disk drive s required reading: ostep - 37. hard disk drive s “project 6: user -level filesystem” due before 11:59p m 12/5 instructor traveling (no class ) 12/7 midterm ii i univers ity policies this section outlines the university level policies that must be included in each course syllabus. the tamu faculty senate established the wording of these policies. note : faculty members should not change the written statements. a faculty member may add separate paragraphs if additional information is needed. 