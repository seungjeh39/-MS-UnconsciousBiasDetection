syllabus course information course information course number: csce 12 course t itle: computer section: 500, 501, 502 time: tr 8:00am to 9:15am location: zach 244 lab: tuesday and thursday 09:35am - 10:25am, 12:35am - 12:25pm, and 12:45pm - 1:35pm location: zach 590 credit hours: 4 instructor details instructor: abdullah muzahid office: peterson 206 phone: 979-458-1059 e-mail: abdullah.muzahid@tamu.edu office hours: tr 3.00 pm to 4.00 pm ta details name: farabi mahmud email: farabi@tamu.edu (mailto:vahidjanfaza@tamu.edu) office hours and location: tba course description computer systems from programmer's perspective including simple logic design, data representation and processor architecture, programming of processors, memory , control flow , input/output, and performance measurements. course prerequisites csce 21 1 - data structures and algorithms required book randal bryant and david o'hallaron, "computer systems - a programmer's perspective", third edition m. morris mano, charles r. kime and t om martin, "logic and computer design fundamentals", fifth edition course learning outcomes the goal of this course is to provide the student with a working knowledge of different methods for logic representation, manipulation, and optimization, for both combinational and sequential logic. at the end of the course the student should be able to view the design of digital systems from a new perspective and have an understanding of several fundamental concepts that can be applied to a wide variety of digital design problems. list one or more learning outcomes for the course. individual course objectives: at the end of this course, students should: understand the organization of a computer system including the cpu datapath, cpu control, and memory systems understand the impact of semiconductor technology on computer design and architecture. understand the basics and principles of instruction set design. be familiar with programming using an assembly level language. understand the impact of instruction sets on hardware design. be familiar with designing datapaths for a processor . understand the implications of branch instructions on program flow and hardware design. understand the role of compilers and high-level languages in programming. be familiar with designing control circuitry for a basic processor . understand the dif ferences in single-cycle/multicycle design of processors. be familiar with processor pipelining. understand basics of memory technology , registers, sram, dram. understand the memory architectures including cache architectures. grading policy breakdown: exams (2 exams) 40% labs 35% quizzes 15% attendance 5% grading scale: a: 90-100% b: 80-89% c: 70-79% d: 60-69% f: 0-59% note: in the event that the average overall grade of all students lies below a 79% there will be a curve on the overall grade. i will not curve the individual exams and assignments. attendance: students are expected to attend and be active discussion participants during the lectures (answering questions posed, asking questions, commenting etc.). students who attends less than 50% lectures will receive a 0 for this part of their grade. exams: there will be two exams. the second exam will be comprehensive, but with an emphasis on the material covered since the first exam. tentative t est schedule: exam 1 – oct 07, 2022 (class time) exam 2 – dec-12-2022 (1pm to 3pm) assignments/quizzes: rather than traditional homework, this course will rely upon a series of on-line quiz assessments. the goal of these quizzes will be to test your knowledge of the lecture material and pinpoint which lectures you should go back and review on-line. there will be one quiz for each week, this quiz must be completed prior to the next week's lecture. students may retake the quiz as many times as desired between its release and the next lecture. if the quiz is submitted in the same day as the due time, it will be graded with full credit. if it is delayed by few days (up to a week), you will get 50% grade. otherwise, you will get 0. the t amu canvas system will be used for all quiz submissions. labs: the course will have six or seven labs (tentative). generally , labs and demos must be completed in one or two week following the lab's introduction. late labs will have 20% of the points deducted for being late up to 1-week. if a lab and/or demo is late for more than a week then, a grade of 0 will be assigned. lectures: lectures will be in person in the classroom. all students are expected to be active participants during lecture. course topics/schedule (tentitive): weeks: t opic week 1: introduction to digital logic design week 2, 3: logic design basics and combinatorial circuit design week 4, 5: sequential logic week 6 - 1 1: assembly language programming week 12 - 15: processor design late w ork policy see above for late policy on quizzes and labs. work submitted by a student as makeup work for an excused absence is not considered late work and is exempted from the late work policy . 