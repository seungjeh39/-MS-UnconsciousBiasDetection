course syllabuscourse informationcourse informationcourse number: csce 221course title:data structures and algorithmssections: 500-509lecture time:sections 500–502: mwf 8:00-8:50am, zach 244sections 503–505: mwf 9:10-10:00am, zach 244sections 506–509: mwf 10:20-11:10am, zach 244lab time: see canvas for detailslocation: lectures and labs are scheduled face-to-facecredit hours: 4instructor detailsinstructor: dr. teresa leykoffice: 106 petr bldg.phone: (979) 845-4456 (office #)e-mail:teresa19@tamu.edu (mailto:teresa19@tamu.edu)office hours: see course resources on canvascourse descriptionspecification, analysis and implementation of abstract data types for lists, stacks, queues, trees,hash tables, graphs, and their associated algorithms. performance trade-offs of differentimplementations; asymptotic analysis of running time and memory usage. includes the execution ofstudents programs written in c++; emphasis on adherence to good software engineering principles.course prerequisitesfirefoxhttps://canvas.tamu.edu/courses/183837/assignments/syllabus 1 of 98/10/22, 6:47 pm grading criteriahomework assignments9%programming assignments27%culture assignment4%quizzes15%exam 115%exam 215%exam 315%!"csce 120 or csce 121 "introduction to program design and concepts"!"csce 222 "discrete structures for computing" or ecen 222 "discrete structures forcomputing"course learning outcomesat the end of this course students should be able to:!"design and implement diverse data structures that allow easy access and manipulation of datausing c++ programming language.!"apply the big-o asymptotic notation to analyze and select an efficient algorithm for solving agiven problem with respect to runtime and memory usage.!"identify the latest developments in the computer science area or be familiar with turing awardwinners.textbook and/or resource materials!"required textbook: “data structures and algorithm analysis in c++,” 4th edition, mark a.weiss, 2014, pearson, isbn-13: 978-0132847377 or isbn-10: 013284737x. also, you may needa textbook on c++ language from the previous semester, or any good c++ reference book(s).!"required:web, zoom, and canvas access.the course material, assignments turn-in, andposting grades are handled through canvas and gradescope. the recommended browsers toaccess canvas are mozilla firefox and google chrome.grading policygrading scale90–100a80–89.9b70–79.9c60–69.9d0–59.9f!"your final grade will be determined based on written homework, programming assignments,cultural assignment, quizzes, and exams.firefoxhttps://canvas.tamu.edu/courses/183837/assignments/syllabus 2 of 98/10/22, 6:47 pm !"the assignment handout will provide points distribution. each programming assignment will begraded focused on: algorithm design, usage of data structures and/or new user-defined types andtheir implementation, its correctness, tests, a typed report describing implemented algorithms anddata structures, and results of computational experiments.!"all grade appeals must be made no later than one week after the grade is posted.graded attendance!"the students lab attendance is required and will be taken on regular basis.!"the lecture attendance will be taken by pop quizzes. the students are responsible to learn allmaterial covered in class, read the assigned text from the textbook and do homeworkassignments.!"2 bonus points will be added to your final score if you have a perfect lab attendance, or 1 point ifyou have only one lab absence.!"make-up exams and quizzes will only be given with documented university-approved excuses,see university regulations (http://student-rules.tamu.edu/) . the student rule 7(http://student-rules.tamu.edu/rule07) explains policies and excused absences. please discussunusual circumstances in advance with the instructor.notes about graded materials!"all homework assignments will be announced in class and posted on canvas. see the link to thecourse calendar on canvas for deadlines.!"the written part of homework assignments or programming reports, and the cover page shouldbe typed preferably using latex or latex-based apps: overleaf (an online latex text editor)or lyx (document processor based on latex), see the class webpage for a lyx tutorial. thehomework in pdf format should be submitted to canvas.!"all programming assignments should be implemented in c++, compiled and run on a computer(preferably using linux), and transferred to gradescope for grading.!"culture assignments allow you to explore the latest developments in computer science andengineering or learn about the famous computer scientists like turing award winners. thehomework should be submitted to canvas.!"quizzes are over material covered during the lectures and assigned reading from the textbook.!"the instructor and tas can request oral exam to check student’s knowledge over materialcovered by test or assignment.late work policya homework assignment will be accepted up to 1 day late with a 5% penalty. once solutions havebeen discussed or handed out the assignments will not be accepted. please discuss unusualfirefoxhttps://canvas.tamu.edu/courses/183837/assignments/syllabus 3 of 98/10/22, 6:47 pm circumstances in advance with the instructor. work submitted by a student as makeup work for anexcused absence is not considered late work and is exempted from the late work policy. (see rule 7 (http://student-rules.tamu.edu/rule07) )course scheduleno.weekdaytopicmodule 1aug. 24wintroduction to data structurespointers, arrays, vectorsintroduction to analysis of algorithmsmodule 2aug. 29mcomplexity of search and sort algorithmsalgorithms – best, worst, average casesthe lower bound theoremmodule 3sept. 06tlinear sort algorithmsstack adt – array based implementationamortized analysismodule 4sept. 12mqueue adt – array-based implementationstack and queue applications. parsermodule 5sept. 19mlinked lists in c++linked list-based stack and queueexam 1module 5sept. 26mlinked list-based stack and queuedequeuesmodule 6oct. 03mrecursive algorithmsanalysis of divide-and-conquer algorithmsfirefoxhttps://canvas.tamu.edu/courses/183837/assignments/syllabus 4 of 98/10/22, 6:47 pm module 7oct. 12witerating and master methodstrees | binary search treesmodule 8oct. 17mavl treesred-black trees2–4 treesmodule 9oct. 31mskip lists | hashingexam 2 module 10nov. 07mheap | huffman treespriority queuesmodule 11nov. 14mgraphs | bfs | dfsdigraph algorithmsmodule 12nov. 21mshortest path algorithmsthanksgiving holidaymodule 12nov. 28mdijkstra's algorithmminimum spanning treesprim's algorithmmodule 13dec. 05dec. 06dec. 07minimum spanning treesdisjoint sets adtkruskal's algorithmdec. 09 &12-13final exams:500-502, 12/09/2022, 10 am-noon503-505, 12/12/2022, 8:00-10:00 amfirefoxhttps://canvas.tamu.edu/courses/183837/assignments/syllabus 5 of 98/10/22, 6:47 pm 506-509, 12/13/2022, 8:00-10:00 amthe topics and related chapters from the textbook:introductionc++ overview: arrays, vectors, strings, matriceschap. 1introduction to analysis of algorithmschap. 2lists, stacks, and queueschap. 3trees and search treeschap. 4balanced search treeschap. 12.2hashingchap. 5priority queues. heaps.chap. 6sortingchap. 7disjoint setschap. 8graphschap. 9algorithms designchap. 10all changes in the schedule will be announced in class and at the class calendar. please see alsouniversity academic calendar (https://registrar.tamu.edu/catalogs,-policies-procedures/academic-calendar) .use canvas to get access to the lecture notes, quizzes and tests, assignments, and check yourgrades on the regular basis during the semester.optional course information itemslearning resources!"you may have noticed from the syllabus that this course focuses on obtaining a computer sciencebackground and developing c++ programming skills. programming is not something you canlearn overnight by reading a textbook or lecture notes; it requires a lot of practice. the tasassigned and i are willing to help you to learn and understand the course material, and help youto master your programming skills so please see us during our office hours. a few hints abouthow to succeed in this course:#"attend class and lab meetings regularlyfirefoxhttps://canvas.tamu.edu/courses/183837/assignments/syllabus 6 of 98/10/22, 6:47 pm #"read lecture notes and related material in the textbook, and feel free to ask questions#"study for quizzes and tests#"retype and implement in c++ examples from the lecture notes and textbook#"complete all labs and projects#"if you have any course related questions please visit us during our office hours#"use the online campuswire to ask questions and participate in discussionsin general, computer science is not an easy subject but it will pay off after graduation.