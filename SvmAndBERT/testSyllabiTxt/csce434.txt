course syllabus page 1 of 10 course information course number: 434 course title: compiler design section s: 500, 200 time: mw 4:10-5:25pm location: zach 244 credit hours: 3 instructor details instructor: khanh nguyen office: 229 petr phone: (979) 458-1904 e-mail: khanhtn@tamu.edu office hours: t 2:30 -3:30pm or by appointment course description programming language translation; functions and general organization of compiler design and interpreters; theoretical and implementation aspects of lexical scanners; parsing of context free languages; code generation and optimization; error recovery course prerequisites csce 315 or approval of instructor. note: this course is a continuation of csce 314 ; hence previous enrollment in csce 314 is helpful. special course designation none course learning outcomes upon successfully completing the course , the student will : • understand the translation process from user code to machine code . • describe major components of a typical compiler and their function . • understand various parsing techniques such as ll(1), slr(1), lalr(1), and lr(1) . • understand and implement various code optimization techniques. • design and implement sound dataflow analys es. course syllabus page 2 of 10 • develop a front -end and a back -end of a n optimizing compiler that can generate executable machine code from source code . textbook and/or resource materials • required : compilers: principles, techniques, & tools ( aka t he dragon book), 2nd edition, by alfred aho, monica lam, ravi sethi, jeffrey ullman . 2006. o this book is required in the sense that w e will follow the material in this textbook closely but not in all aspects. the exercises and discussion in this book will b e helpful to supplement the lecture . • highly r ecommended: engineering: a compiler, 2nd edition, by keith cooper, linda torczon . 2011. • additional : principles of program analysis , 2nd edition, by fleming nielson, hanne riis nielson, chris han kin. 1999. • lecture slides and extra reading materials will be available in google drive . grading policy grading is based on the following components: • written assignments : 7±1 written assignments : 5% of grade . • exams : 2 midterm exam s (15% of grade each ), and 1 final exam (20% of grade) . the final exam will be cumulative. all exams are open -book, open -note , closed -internet. • project : 45% of grade . this will be a semester -long project building an optimizing compiler with multiple parts . the language used for the project is java . for the first 3 project assignments , students must work individually . student s may work in pair in subsequent project assignments.