page 1 of 5 course syllabus 1 course information course number: csce 313-200 (honors) course title: introductio n to computer systems time: tr 3:55-5:10pm location: 126 hrbb credit hours: 4 lab time: f 8-10am lab location: 590 zach website: http://irl.cse.tamu.edu/courses/313/ piazza: http://piazza.com/tamu/spring2022/csce313200 instructor details instructor: dmitri loguinov office: 209 petr phone: 979-845-0512 e-mail: dmitri@cse.tamu.edu office hours: tr 5:30-6:30pm ta: arif arman office: 211 petr e-mail: arman@tamu.edu office hours: mw 12-1pm course description this class is covers common al gorithmic and implementation prob lems arising in operating systems, inter-process communi cation, multi-threading, synchron ization, memory management, process scheduling, and la rge-scale file i/o. course prerequisites csce 312 (computer organization), csce 222 (discrete structures for computing), csce 221 (data structures and algorithms ), csce 113 (intermediate progra mming and design), and knowledge of c/c++, debugging, and pointers. course learning outcomes at the end of the semester, the s tudents will obtain experience with basic operating-system functionality, multi-threadi ng, synchronization, file i/o, virt ual memory, and c/c++ system apis. page 2 of 5 course syllabus textbook and/or resource materials w. stallings, “operating systems: internals and design principl es,” pearson, 9th edition, 2017. grading policy a: 90-100%, b: 80-89%, c: 70- 79%, d: 60-69%, f: 0-59% assignment qty format percent of final grade homework 4 implementation and report 40% (10% each) midterms 3 closed-book 45% (15% each) quizzes 3 closed-book 15% (5% each) late work policy homework submissions are due at 10 am. late homework is accepta ble with a penalty of 20% of the original grade per day (no poi nts after 5 days). delays are rounded up to the nearest full day. example: your homework scores 76 points, but is 28 hours late. your sc ore is then reduced by 40 points and becomes 36. homework each homework must be accompanied by a written report (if there are multiple parts in the homework, the report applies on ly to the last part) describing your implementation and showing the performance analysis requested in the handout. write in as much detail as possible, explain the various observations, and comment on the sanity of obtained results. this course assumes independent work on each assignment. all submissions must be original and developed from scratch. you may not copy any part of other students’ work, no matter how short , or material found online unle ss explicitly allowed by the ins tructor. in particular, no team work is allowed. if external sources are used, even with modification or adaptation , they must be clearly acknowledged in the submission. if unsure, check with t he instructor ahead of time. any academic dishonesty, including cheating and plagiarism, will re sult in an f* for the course and may lead to expulsion from the university. course schedule lecture # title topic 1 preliminaries 1 syllabus, visual studio 2 preliminaries 2 c++ pointers, homework #1, pipes 3 operating systems chapter 2 4 processes chapter 3 5 threads 1 chapter 4 6 quiz 1 systems notes handout page 3 of 5 course syllabus 7 synchronization 1 chapter 5 8 synchronization 2 chapter 5 9 synchronization 3 chapter 5 10 midterm 1 chapters 2-4 (parts 5), homework #1 11 practice exam problems 12 synchronization 4 chapter 5 13 synchronization 5 chapter 5 14 quiz 2 chapters 4-5 15 practice 2 exam problems 16 deadlocks chapter 6 17 file system 1 chapter 11 18 midterm 2 chapters 5-6 19 file system 2 chapter 11 20 file system 3 chapter 11 21 file system 4 chapter 11 22 quiz 3 chapters 6, 11, 12 23 practice 3 exam problems 24 memory 1 chapter 8 25 memory 2 chapter 8 26 memory 3 chapter 8 27 scheduling chapter 9 28 midterm 3 chapters 11, 12, 7, 8 2 