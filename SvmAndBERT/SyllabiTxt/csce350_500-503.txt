course syllabus  edit course information course information course number: csce 350 course t itle: computer organization and design section: 500, 501, 502, 503 time: mwf 10:20am to 1 1:10am location: zach 310 lab: tuesday and thursday 08:25am - 09:15am, 09:35am - 10:25am, 1 1:35am - 12:25pm and 12:45pm -01:35pm location: zach 592 credit hours: 4 instructor details instructor: abdullah muzahid office: peterson 206 phone: 979-458-1059 e-mail: abdullah.muzahid@tamu.edu office hours: mw 9.00 am to 10 am online via zoom https://tamu.zoom.us/j/96231447885?pwd=k2hky251swgzu2crtgtoc2gyn0jiut09 meeting id: 962 3144 7885 passcode: 362173 one tap mobile +13462487799,,96231447885# us (houston) ta details name: vahid janfaza email: vahidjanfaza@tamu.edu (mailto:vahidjanfaza@tamu.edu) office hours: tba course description computer architecture and design; use of register transfer languages and simulation tools to describe and simulate computer operation; central processing unit organization, microprogramming, input/output and memory system architectures. cross-listed with csce 350. course prerequisites ecen 248 - introduction to digital systems required book david patterson and john hennessy , “computer organization and design: the hardware/software interface”, arm edition , 2016 or newer . electronic versions are ok. (note: it must be the "arm" edition, no other edition is usable for this class ) course learning outcomes the goal of this course is to provide the student with a working knowledge of different methods for logic representation, manipulation, and optimization, for both combinational and sequential logic. at the end of the course the student should be able to view the design of digital systems from a new perspective and have an understanding of several fundamental concepts that can be applied to a wide variety of digital design problems. list one or more learning outcomes for the course. individual course objectives: at the end of this course, students should: understand the organization of a computer system including the cpu datapath, cpu control, and memory systems understand the impact of semiconductor technology on computer design and architecture. understand the basics and principles of instruction set design. be familiar with programming using an assembly level language. understand the impact of instruction sets on hardware design. be familiar with designing datapaths for a processor . understand the implications of branch instructions on program flow and hardware design. understand the performance implications of various factors such as clock speed, average clock cycles per instruction and number of instructions. understand the role of compilers and high-level languages in programming. be familiar with designing control circuitry for a basic processor . understand the dif ferences in single-cycle/multicycle design of processors. be familiar with processor pipelining. understand the implications of pipelining on memory design, instruction set design, compiling, performance etc. understand the implications of branch instructions on pipelining. understand basics of memory technology , registers, sram, dram. understand the performance issue of various memory technologies. be familiar with the notion of locality . understand the memory architectures including cache architectures. be familiar with various cache architectures: direct-mapped, set-associative, wide/narrow block size etc. understand the concepts of virtual memory . be familiar with the need for address translation. understand the impact of address translation on cache/memory accesses. be familiar with hardware designs of various cache architectures. understand the basics of input/output. understand the principles of instruction-level parallelism (ilp) and processor microarchitectures which exploit it. understand the principles of thread-level parallelisms and processor microarchitecture which exploit it. understand register-transfer level (r tl) system concepts and description methods, including a hardware description language (verilog) grading policy breakdown: exams (2 exams) 40% labs 35% quizzes 20% attendance 5% grading scale: a: 90-100% b: 80-89% c: 70-79% d: 60-69% f: 0-59% note: in the event that the average overall grade of all students lies below a 79% there will be a curve on the overall grade. i will not curve the individual exams and assignments. attendance: students are expected to attend and be active discussion participants during the lectures (answering questions posed, asking questions, commenting etc.). students who attends less than 50% lectures will receive a 0 for this part of their grade. exams: there will be two exams. the second exam will be comprehensive, but with an emphasis on the material covered since the first exam. tentative t est schedule: exam 1 – march 04, 2022 exam 2 – may-09-2022 assignments/quizzes: rather than traditional homework, this course will rely upon a series of on-line quiz assessments. the goal of these quizzes will be to test your knowledge of the lecture material and pinpoint which lectures you should go back and review on-line. there will be one quiz for each lecture, this quiz must be completed prior to the next lecture. students may retake the quiz as many times as desired between its release and the next lecture. if the quiz is submitted in the same day as the due time, it will be graded with full credit. if it is delayed by few days (up to a week), you will get 50% grade. otherwise, you will get 0. the t amu canvas system will be used for all quiz submissions. labs: the course will have nine prelabs and nine labs (tentative). prelabs are expected to be completed before attending the associated lab session. late prelabs will have 50% of the points deducted for being one working day late, more than 2 days late will not be accepted. generally , post-labs and demos must be completed the week following the lab's introduction (the exception being a couple labs that take two weeks). late post-labs will have 20% of the points deducted for being late up to 1-week. if a post-lab and/or demo is late for more than a week then, a grade of 0 will be assigned. lectures: lectures will be in person in the classroom. all students are expected to be active participants during lecture. course topics/schedule: hours: t opic 3 hours: overview of computer architecture 3 hours: instruction set architectures (isa), representing instructions on the computer , arithmetical and logical instructions, memory access instructions 3 hours: instruction set architectures (isa), control flow instructions, function calls instructions, input- output instructions spim- instruction set simulator 3 hours: computer arithmetic, signed and unsigned numbers, addition and subtraction, multiplication, division, floating point operations 3 hours: t ranslating and starting a program, compilers, compiler optimization, object code generation, assemblers, linking, run-time execution environment 3 hours: performance evaluation, cpu performance and its factors, performance metrics, performance factors, comparing performance, spec benchmarks 2 hours: hardware description languages, v erilog hardware description language, design-simulation process, structural designs in v erilog behavioral hdl description of systems 3 hours: datapath and control, and alu design 3 hours: single-cycle implementation 3 hours: microprogramming, catchup 3 hours: pipelining, pipelined datapath 4 hours: pipelined control, pipeline hazards: structural, control, data hazard detection and resolution, exception handling 4 hours: memory hierarchy , overview of sram and dram design, basic of caches, framework for memory hierarchy , measuring memory performance late w ork policy see above for late policy on quizzes, prelabs and labs. work submitted by a student as makeup work for an excused absence is not considered late work and is exempted from the late work policy . 